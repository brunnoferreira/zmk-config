/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <125>;
        };

        td_braces: td_braces {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACES";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&open_close_braces>;
        };

        td_parentheses: td_parentheses {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PARENTHESES";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&open_close_parentheses>;
        };

        td_brackets: td_brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKETS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&open_close_brackets>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        combo_alfred {
            bindings = <&kp LC(SPACE)>;
            key-positions = <38 39>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        combo_clipboard {
            bindings = <&kp LS(LG(V))>;
            key-positions = <37 40>;
            layers = <0>;
        };
    };

    macros {
        open_close_parentheses: open_close_parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "OPEN_CLOSE_PARENTHESES";
        };

        open_close_braces: open_close_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "OPEN_CLOSE_BRACES";
        };

        open_close_brackets: open_close_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "OPEN_CLOSE_BRACKETS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  Q  |
            // |  Q  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  Q  |
            // |  Q  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  Q  |
            //             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q        &kp W           &kp E           &kp R             &kp T        &kp Y        &kp U              &kp I            &kp O            &kp P           &kp NON_US_BACKSLASH
&trans     &hm LCTRL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &kp G        &kp H        &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RCTRL SEMI  &kp SQT
&trans     &kp Z        &kp X           &kp C           &kp V             &kp B        &kp N        &kp M              &kp COMMA        &kp DOT          &kp FSLH        &trans
                                        &kp LGUI        &kp BACKSPACE     &lt 2 TAB    &lt 1 ENTER  &kp SPACE          &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  Q  |
            // |  Q  |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |  Q  |
            // |  Q  |     |     |     |     |     |   |     |     |     |     |     |  Q  |
            //             | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans         &kp N1     &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7          &kp UP_ARROW    &kp N9     &kp N0          &trans
&trans         &kp GRAVE  &trans  &trans    &trans  &trans       &kp LEFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp APOSTROPHE  &trans
&kp LC(LG(Q))  &trans     &trans  &trans    &trans  &trans       &trans    &trans          &trans          &trans     &trans          &kp LC(LG(SPACE))
                                  &kp LGUI  &trans  &lt 3 ESC    &kp RET   &trans          &kp RALT
            >;

            label = "Navigation";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  Q  |
            // |  Q  |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  Q  |
            // |  Q  |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  Q  |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp TILDE        &trans       &kp AMPERSAND  &td_braces       &kp RIGHT_BRACE          &kp N7   &kp N8  &kp N9  &kp PLUS   &kp ASTERISK  &trans
&trans  &kp EXCLAMATION  &kp AT       &kp HASH       &td_parentheses  &kp RIGHT_PARENTHESIS    &kp N4   &kp N5  &kp N6  &kp MINUS  &kp SLASH     &trans
&trans  &kp DOLLAR       &kp PERCENT  &kp CARET      &td_brackets     &kp RIGHT_BRACKET        &kp N1   &kp N2  &kp N3  &kp DOT    &kp EQUAL     &trans
                                      &trans         &trans           &kp SPACE                &kp RET  &kp N0  &trans
            >;

            label = "Numbers and Symbols";
        };

        layer_3 {
            bindings = <
&trans        &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1
&bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans        &trans
&trans        &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
